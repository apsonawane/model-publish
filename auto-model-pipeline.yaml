trigger:
 - main 

schedules: 

 - cron: "0 0 * * *" 

   displayName: Daily midnight build 

   branches: 

     include: 
       - main 

   always: true 

parameters:
 - name: model_name
   displayName: mode name on huggingface website
   type: string
   default: microsoft/Phi-3.5-mini-instruct

pool: onnxruntime-Linux-GPU-T4
steps:
 - task: UsePythonVersion@0
   inputs:
     versionSpec: '3.10'
     architecture: 'x64'

 - bash: |
     pip install -r llama-requirements.txt
   displayName: install the necessary packages
   workingDirectory: $(Build.SourcesDirectory)

#  - script: pip install --pre azure-cli --extra-index-url https://azurecliprod.blob.core.windows.net/edge
#    displayName: 'upgrade azure cli'

#  - script: az --version
#    displayName: 'Show Azure CLI version'

#  - script: |
#       python -c "with open('hello.txt', 'w') as f:f.write('hello world')"
#       azcopy cp --recursive "./hello.txt" 'https://sunghchostorageaccount.blob.core.windows.net/test'
#       ls
#    displayName: 'try azcopy upload to sun blob'


#  - script: |
#      az account list
#      python -c "with open('hello-test.txt', 'w') as f:f.write('hello world')"
#      azcopy cp --recursive "./hello-test.txt" 'https://sunghchostorageaccount.blob.core.windows.net/test'
#      az ml data create --name testfile --version 1 --path './hello-test.txt' --registry-name model-publish-test --description "test file"
#    displayName: "try upload to AzureML"



 - bash: |
     echo Authenticate with Huggingface repository 

     huggingface-cli login --token "$(hf_token)"

   displayName: "Authentication to Huggingface repo" 

 - script: |
     docker run --gpus all --rm \
        --ipc=host \
        --volume $(Build.SourcesDirectory):/ort_src \
        --volume $(Build.BinariesDirectory):/build \
        -e CCACHE_DIR=/cache -w /ort_src \
        -e HF_TOKEN=$(hf_token) \
        -e MODEL_NAME=${{ parameters.model_name }} \
        ptebic.azurecr.io/public/aifx/acpt/stable-ubuntu2004-cu121-py310-torch222:biweekly.202410.2 /bin/bash /ort_src/docker_script.sh
   workingDirectory: $(Build.SourcesDirectory)
   displayName: "start model endpoint and RAI eval in container"

 - bash: |
    pip list 
   displayName: "dump pip list"

#  - task: AzureCLI@2
#    displayName: 'upload model to Blob Storage'
#    inputs:
#      azureSubscription: AIInfraBuild
#      scriptLocation: inlineScript
#      scriptType: bash
#      inlineScript: |
#        cd $(Build.SourcesDirectory)
#        ls $(Build.SourcesDirectory)
#        azcopy copy './microsoft_phi-3-mini-4k-instruct/' 'https://sunghchostorageaccount.blob.core.windows.net/test' --recursive

 - task: AzureCLI@2
   displayName: 'upload model to AzureML registry'
   inputs:
     azureSubscription: AIInfraBuild
     scriptLocation: inlineScript
     scriptType: bash
     inlineScript: |
       cd $(Build.BinariesDirectory)
       az extension add -n ml -y
       az extension list
       az account list
       az ml registry create --resource-group asonawane-dev-linux --file registry.yml
       az ml registry list
       az ml data create --name ${{ parameters.model_name }}-test-only --registry-name TestRegistryforModelPublish --version 1 --path '${{ parameters.model_name }}' --description "${{ parameters.model_name }} from pipeline"
